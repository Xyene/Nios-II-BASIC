NOP: NOP()
LXI_BC_d16: LXI(BC, d16)
STAX_B: STAX(B)
INX_BC: INX(BC)
INR_B: INR(B)
DCR_B: DCR(B)
MVI_B_d8: MVI(B, d8)
RLC: RLC()
NOP: NOP()
DAD_BC: DAD(BC)
LDAX_B: LDAX(B)
DCX_BC: DCX(BC)
INR_C: INR(C)
DCR_C: DCR(C)
MVI_C_d8: MVI(C, d8)
RRC: RRC()
NOP: NOP()
LXI_DE_d16: LXI(DE, d16)
STAX_D: STAX(D)
INX_DE: INX(DE)
INR_D: INR(D)
DCR_D: DCR(D)
MVI_D_d8: MVI(D, d8)
RAL: RAL()
NOP: NOP()
DAD_DE: DAD(DE)
LDAX_D: LDAX(D)
DCX_DE: DCX(DE)
INR_E: INR(E)
DCR_E: DCR(E)
MVI_E_d8: MVI(E, d8)
RAR: RAR()
NOP: NOP()
LXI_HL_d16: LXI(HL, d16)
SHLD_a16: SHLD(a16)
INX_HL: INX(HL)
INR_H: INR(H)
DCR_H: DCR(H)
MVI_H_d8: MVI(H, d8)
DAA: DAA()
NOP: NOP()
DAD_HL: DAD(HL)
LHLD_a16: LHLD(a16)
DCX_HL: DCX(HL)
INR_L: INR(L)
DCR_L: DCR(L)
MVI_L_d8: MVI(L, d8)
CMA: CMA()
NOP: NOP()
LXI_SP_d16: LXI(SP, d16)
STA_a16: STA(a16)
INX_SP: INX(SP)
INR_M: INR(M)
DCR_M: DCR(M)
MVI_M_d8: MVI(M, d8)
STC: STC()
NOP: NOP()
DAD_SP: DAD(SP)
LDA_a16: LDA(a16)
DCX_SP: DCX(SP)
INR_A: INR(A)
DCR_A: DCR(A)
MVI_A_d8: MVI(A, d8)
CMC: CMC()
MOV_B_B: MOV(B, B)
MOV_B_C: MOV(B, C)
MOV_B_D: MOV(B, D)
MOV_B_E: MOV(B, E)
MOV_B_H: MOV(B, H)
MOV_B_L: MOV(B, L)
MOV_B_M: MOV(B, M)
MOV_B_A: MOV(B, A)
MOV_C_B: MOV(C, B)
MOV_C_C: MOV(C, C)
MOV_C_D: MOV(C, D)
MOV_C_E: MOV(C, E)
MOV_C_H: MOV(C, H)
MOV_C_L: MOV(C, L)
MOV_C_M: MOV(C, M)
MOV_C_A: MOV(C, A)
MOV_D_B: MOV(D, B)
MOV_D_C: MOV(D, C)
MOV_D_D: MOV(D, D)
MOV_D_E: MOV(D, E)
MOV_D_H: MOV(D, H)
MOV_D_L: MOV(D, L)
MOV_D_M: MOV(D, M)
MOV_D_A: MOV(D, A)
MOV_E_B: MOV(E, B)
MOV_E_C: MOV(E, C)
MOV_E_D: MOV(E, D)
MOV_E_E: MOV(E, E)
MOV_E_H: MOV(E, H)
MOV_E_L: MOV(E, L)
MOV_E_M: MOV(E, M)
MOV_E_A: MOV(E, A)
MOV_H_B: MOV(H, B)
MOV_H_C: MOV(H, C)
MOV_H_D: MOV(H, D)
MOV_H_E: MOV(H, E)
MOV_H_H: MOV(H, H)
MOV_H_L: MOV(H, L)
MOV_H_M: MOV(H, M)
MOV_H_A: MOV(H, A)
MOV_L_B: MOV(L, B)
MOV_L_C: MOV(L, C)
MOV_L_D: MOV(L, D)
MOV_L_E: MOV(L, E)
MOV_L_H: MOV(L, H)
MOV_L_L: MOV(L, L)
MOV_L_M: MOV(L, M)
MOV_L_A: MOV(L, A)
MOV_M_B: MOV(M, B)
MOV_M_C: MOV(M, C)
MOV_M_D: MOV(M, D)
MOV_M_E: MOV(M, E)
MOV_M_H: MOV(M, H)
MOV_M_L: MOV(M, L)
HLT: HLT()
MOV_M_A: MOV(M, A)
MOV_A_B: MOV(A, B)
MOV_A_C: MOV(A, C)
MOV_A_D: MOV(A, D)
MOV_A_E: MOV(A, E)
MOV_A_H: MOV(A, H)
MOV_A_L: MOV(A, L)
MOV_A_M: MOV(A, M)
MOV_A_A: MOV(A, A)
ADD_B: ADD(B)
ADD_C: ADD(C)
ADD_D: ADD(D)
ADD_E: ADD(E)
ADD_H: ADD(H)
ADD_L: ADD(L)
ADD_M: ADD(M)
ADD_A: ADD(A)
ADC_B: ADC(B)
ADC_C: ADC(C)
ADC_D: ADC(D)
ADC_E: ADC(E)
ADC_H: ADC(H)
ADC_L: ADC(L)
ADC_M: ADC(M)
ADC_A: ADC(A)
SUB_B: SUB(B)
SUB_C: SUB(C)
SUB_D: SUB(D)
SUB_E: SUB(E)
SUB_H: SUB(H)
SUB_L: SUB(L)
SUB_M: SUB(M)
SUB_A: SUB(A)
SBB_B: SBB(B)
SBB_C: SBB(C)
SBB_D: SBB(D)
SBB_E: SBB(E)
SBB_H: SBB(H)
SBB_L: SBB(L)
SBB_M: SBB(M)
SBB_A: SBB(A)
ANA_B: ANA(B)
ANA_C: ANA(C)
ANA_D: ANA(D)
ANA_E: ANA(E)
ANA_H: ANA(H)
ANA_L: ANA(L)
ANA_M: ANA(M)
ANA_A: ANA(A)
XRA_B: XRA(B)
XRA_C: XRA(C)
XRA_D: XRA(D)
XRA_E: XRA(E)
XRA_H: XRA(H)
XRA_L: XRA(L)
XRA_M: XRA(M)
XRA_A: XRA(A)
ORA_B: ORA(B)
ORA_C: ORA(C)
ORA_D: ORA(D)
ORA_E: ORA(E)
ORA_H: ORA(H)
ORA_L: ORA(L)
ORA_M: ORA(M)
ORA_A: ORA(A)
CMP_B: CMP(B)
CMP_C: CMP(C)
CMP_D: CMP(D)
CMP_E: CMP(E)
CMP_H: CMP(H)
CMP_L: CMP(L)
CMP_M: CMP(M)
CMP_A: CMP(A)
RNZ: RNZ()
POP_BC: POP(BC)
JNZ_a16: JNZ(a16)
JMP_a16: JMP(a16)
CNZ_a16: CNZ(a16)
PUSH_BC: PUSH(BC)
ADI_d8: ADI(d8)
RST_0: RST(0)
RZ: RZ()
RET: RET()
JZ_a16: JZ(a16)
JMP_a16: JMP(a16)
CZ_a16: CZ(a16)
CALL_a16: CALL(a16)
ACI_d8: ACI(d8)
RST_1: RST(1)
RNC: RNC()
POP_DE: POP(DE)
JNC_a16: JNC(a16)
OUT_d8: OUT(d8)
CNC_a16: CNC(a16)
PUSH_DE: PUSH(DE)
SUI_d8: SUI(d8)
RST_2: RST(2)
RC: RC()
RET: RET()
JC_a16: JC(a16)
IN_d8: IN(d8)
CC_a16: CC(a16)
CALL_a16: CALL(a16)
SBI_d8: SBI(d8)
RST_3: RST(3)
RPO: RPO()
POP_HL: POP(HL)
JPO_a16: JPO(a16)
XTHL: XTHL()
CPO_a16: CPO(a16)
PUSH_HL: PUSH(HL)
ANI_d8: ANI(d8)
RST_4: RST(4)
RPE: RPE()
PCHL: PCHL()
JPE_a16: JPE(a16)
XCHG: XCHG()
CPE_a16: CPE(a16)
CALL_a16: CALL(a16)
XRI_d8: XRI(d8)
RST_5: RST(5)
RP: RP()
POP_AF: POP(AF)
JP_a16: JP(a16)
DI: DI()
CP_a16: CP(a16)
PUSH_AF: PUSH(AF)
ORI_d8: ORI(d8)
RST_6: RST(6)
RM: RM()
SPHL: SPHL()
JM_a16: JM(a16)
EI: EI()
CM_a16: CM(a16)
CALL_a16: CALL(a16)
CPI_d8: CPI(d8)
RST_7: RST(7)
